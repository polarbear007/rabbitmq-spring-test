<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-2.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- 配置连接工厂, 好处在于我们不需要指定具体的实现类 
	<rabbit:connection-factory id="connectionFactory" 
							   cache-mode="CHANNEL"
							   channel-cache-size="50"
							   host="192.168.48.130"
							   port="5672"
							   username="root"
							   password="root"
							   virtual-host="my_vhost"
	/>-->
	
	<bean id="connectionFactory" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
		<property name="cacheMode" value="CHANNEL"></property>	
		<property name="channelCacheSize" value="50"></property>
		<property name="host" value="192.168.48.131"></property>
		<property name="port" value="5672"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
		<property name="virtualHost" value="my_vhost"></property>
	</bean>
	
	<!-- 配置管理对象，这个对象可以创建、绑定、删除交换器和队列 -->
	<rabbit:admin id="rabbitAdmin" connection-factory="connectionFactory" auto-startup="true"/>
	
	<!-- 配置rabbitmq 的模板对象，主要用来发送消息和接收消息 -->
	<rabbit:template id="rabbitTemplate" connection-factory="connectionFactory" ></rabbit:template>
	
	<!-- 配置一个有固定交换器的 template 对象来发送消息
	          【 注意1】 这里要的是交换器名，不是对象的id
		【注意2】 我们一般配置一个交换器名  + 路由键；    
		                   当然，也可以把交换器名设置成空字符串，那么就是使用默认交换器； 然后路由键设置成队列名。
	<rabbit:template id="rabbitTemplate2" connection-factory="connectionFactory" 
									      exchange="exchange_test"
									      routing-key="test.routing.key" /> -->
	<rabbit:template id="rabbitTemplate2" connection-factory="connectionFactory" 
								      exchange=""
								      routing-key="queue_test" />	
	<!-- 配置一个有固定队列的 template 对象来接收消息 -->						      
    <rabbit:template id="rabbitTemplate3" connection-factory="connectionFactory" 
								      queue="queue_test" />		
	
	<!-- 配置一个有固定队列的 template 对象来接收消息,同时指定 SmartMessageConverter接口的实现类 -->	
	<bean id="messageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/>
	<!-- 指定messageConverter 、 队列名、交换器名、路由键等  -->					      
    <rabbit:template id="rabbitTemplate4" connection-factory="connectionFactory" 
    								   exchange="exchange_test"
									   routing-key="test.routing.key"
     								   queue="queue_test"
								       message-converter="messageConverter"/>	
	
	<rabbit:queue id="queueTest" name="queue_test"></rabbit:queue>
	
	<!-- 通过队列统一设置消息的过期时间 -->
	<rabbit:queue id="queueTTL" name="queue_ttl">
		<rabbit:queue-arguments>
		<!-- 在指定结构化参数的时候，请直接使用普通字面量值，如果是非字符串，还需要指定value-type -->
			<entry key="x-message-ttl" value="6000" value-type="java.lang.Long"></entry>
		</rabbit:queue-arguments>
	</rabbit:queue>
	
	<rabbit:direct-exchange id="exchangeTest" name="exchange_test" >
		<!-- 给这个交换器添加配置参数，注意，这个rabbit:exchange-arguments应该放在 rabbit:bindings前面-->
		<rabbit:exchange-arguments>
			<!-- 在指定结构化参数的时候，请直接使用普通字面量值，如果是非字符串，还需要指定value-type -->
			<entry key="alternate-exchange" value="exchange_backup"></entry>
		</rabbit:exchange-arguments> 
		<rabbit:bindings>
			<!-- 绑定队列 -->
			<rabbit:binding queue="queueTest" key="test.routing.key"></rabbit:binding>
			<rabbit:binding queue="queueTTL" key="ttl.routing.key"></rabbit:binding>
		</rabbit:bindings>
	</rabbit:direct-exchange>
	
	<!-- 声明一个备用的队列，用来绑定备用交换器 -->
	<rabbit:queue id="queueBackup" name="queue_backup"></rabbit:queue>
	
	<!-- 声明一个备用的交换器 -->
	<rabbit:fanout-exchange  id="exchangeBackup" name="exchange_backup">
		<rabbit:bindings>
			<!-- 因为这个交换器是fanout 类型，所以根本不需要指定BindingKey -->
			<rabbit:binding queue="queueBackup"></rabbit:binding>
		</rabbit:bindings>
	</rabbit:fanout-exchange>
</beans>
